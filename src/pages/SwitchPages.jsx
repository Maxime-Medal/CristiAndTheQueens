import React from "react";
import Navigation from "../components/Navigations";
import Resume from "./Resume";

let verbs = [
  "market",
  "kill",
  "want",
  "wipe",
  "integrate",
  "persist",
  "view",
  "fear",
  "dismiss",
  "maintain",
  "breed",
  "creep",
  "tap",
  "disappear",
  "price",
  "pretend",
  "cross",
  "characterize",
  "block",
  "lift",
  "compensate",
  "smash",
  "sponsor",
  "pursue",
  "advance",
  "anticipate",
  "top",
  "dump",
  "announce",
  "bang",
  "govern",
  "match",
  "envisage",
  "carve",
  "lie",
  "plead",
  "drink",
  "swing",
  "transform",
  "spell",
  "calculate",
  "hire",
  "stay",
  "omit",
  "constitute",
  "initiate",
  "suppose",
  "benefit",
  "demonstrate",
  "give",
  "book",
  "study",
  "have",
  "choose",
  "spell",
  "strengthen",
  "enquire",
  "pull",
  "conform",
  "dream",
  "limit",
  "injure",
  "bend",
  "mean",
  "grant",
  "repair",
  "think",
  "throw",
  "assume",
  "pin",
  "rent",
  "search",
  "seize",
  "neglect",
  "manage",
  "remark",
  "talk",
  "miss",
  "determine",
  "cease",
  "decide",
  "act",
  "waste",
  "stroke",
  "break",
  "shift",
  "diminish",
  "stem",
  "work",
  "reduce",
  "speed",
  "support",
  "deserve",
  "interview",
  "borrow",
  "demonstrate",
  "try",
  "born",
  "tear",
];

let adjectives = [
  "relieved",
  "empty",
  "aback",
  "futuristic",
  "even",
  "dispensable",
  "actually",
  "famous",
  "scary",
  "guiltless",
  "normal",
  "trashy",
  "half",
  "jolly",
  "discreet",
  "observant",
  "vigorous",
  "fearful",
  "past",
  "dynamic",
  "closed",
  "incandescent",
  "second",
  "heartbreaking",
  "cruel",
  "bloody",
  "obeisant",
  "lively",
  "sore",
  "three",
  "guttural",
  "bashful",
  "absent",
  "teeny",
  "feigned",
  "workable",
  "orange",
  "dull",
  "scandalous",
  "fluttering",
  "aggressive",
  "halting",
  "immediate",
  "unknown",
  "efficacious",
  "open",
  "parsimonious",
  "quickest",
  "excellent",
  "second-hand",
  "misty",
  "recondite",
  "combative",
  "light",
  "resonant",
  "uncovered",
  "glamorous",
  "irritating",
  "enthusiastic",
  "tedious",
  "nutty",
  "southern",
  "erratic",
  "shrill",
  "afraid",
  "worried",
  "economic",
  "ultra",
  "harsh",
  "common",
  "weary",
  "cheerful",
  "loose",
  "concerned",
  "aspiring",
  "organic",
  "workable",
  "naughty",
  "panoramic",
  "pushy",
  "therapeutic",
  "reminiscent",
  "actually",
  "imaginary",
  "incompetent",
  "ahead",
  "enormous",
  "lonely",
  "questionable",
  "four",
  "ruddy",
  "mere",
  "aromatic",
  "private",
  "resolute",
  "dead",
  "wonderful",
  "relevant",
  "protective",
  "defiant",
];

let adverb = [
  "blindly",
  "energetically",
  "punctually",
  "together",
  "physically",
  "miserably",
  "honestly",
  "very",
  "absentmindedly",
  "softly",
  "fondly",
  "solidly",
  "successfully",
  "upward",
  "beautifully",
  "adventurously",
  "loyally",
  "forth",
  "enormously",
  "hungrily",
  "acidly",
  "yawningly",
  "originally",
  "literally",
  "probably",
  "extremely",
  "foolishly",
  "definitely",
  "shakily",
  "rarely",
  "suddenly",
  "regularly",
  "specifically",
  "warmly",
  "primarily",
  "powerfully",
  "vaguely",
  "unexpectedly",
  "previously",
  "lively",
  "kissingly",
  "happily",
  "coolly",
  "questionably",
  "never",
  "afterwards",
  "jaggedly",
  "rather",
  "normally",
  "coyly",
  "scarcely",
  "actually",
  "joyfully",
  "viciously",
  "knowingly",
  "triumphantly",
  "else",
  "yearly",
];

let nouns = [
  "understanding",
  "son",
  "inflation",
  "activity",
  "community",
  "anxiety",
  "growth",
  "arrival",
  "map",
  "property",
  "blood",
  "communication",
  "variety",
  "vehicle",
  "significance",
  "preparation",
  "analyst",
  "birthday",
  "sympathy",
  "police",
  "association",
  "signature",
  "psychology",
  "potato",
  "appearance",
  "championship",
  "cigarette",
  "arrival",
  "tennis",
  "construction",
  "memory",
  "child",
  "initiative",
  "depth",
  "president",
  "marketing",
  "category",
  "elevator",
  "funeral",
  "communication",
  "distribution",
  "development",
  "guest",
  "oven",
  "society",
  "sir",
  "advertising",
  "two",
  "marriage",
  "affair",
  "paper",
  "thanks",
  "courage",
  "mixture",
  "suggestion",
  "news",
  "confusion",
  "nature",
  "cancer",
  "movie",
  "currency",
  "apartment",
  "hotel",
  "hearing",
  "police",
  "internet",
  "salad",
  "height",
  "reputation",
  "session",
  "shirt",
  "cookie",
  "operation",
  "assumption",
  "airport",
  "tradition",
  "refrigerator",
  "comparison",
  "guitar",
  "dad",
  "message",
  "teaching",
  "environment",
  "consequence",
  "negotiation",
  "library",
  "week",
  "employee",
  "meat",
  "growth",
  "boyfriend",
  "trainer",
  "paper",
  "way",
  "union",
  "storage",
  "psychology",
  "cheek",
  "role",
  "distribution",
  "meaning",
  "artisan",
  "death",
  "shirt",
  "uncle",
  "opportunity",
  "employer",
  "nation",
  "mode",
  "childhood",
  "version",
  "speaker",
  "week",
  "virus",
  "teacher",
  "success",
  "mood",
  "theory",
  "policy",
  "organization",
  "recommendation",
  "university",
  "loss",
  "income",
  "river",
  "shopping",
  "member",
  "article",
  "estate",
  "warning",
  "truth",
  "breath",
  "hall",
  "opinion",
  "church",
  "love",
  "story",
  "bath",
  "college",
  "payment",
  "leadership",
  "impression",
  "reading",
  "person",
  "selection",
  "orange",
  "inspector",
  "platform",
  "tooth",
  "housing",
  "oven",
  "nature",
  "government",
  "night",
  "touch",
  "population",
  "cigarette",
  "agency",
  "army",
  "literature",
  "situation",
  "alcohol",
  "reception",
  "son",
  "activity",
  "promotion",
];

const newArray = verbs.concat(adverb, nouns, adjectives);
console.log(newArray);

const phrase = [];

function SwitchPage({ rangeWordValue, setWord }) {
  const [state, setState] = React.useState("Click on like to begin");

  const deleteWord = () => {
    let index = Math.floor(Math.random() * newArray.length);
    return newArray.splice(index, 1), setState(newArray[index]);
  };

  const addWord = () => {
    let index = Math.floor(Math.random() * newArray.length);
    return setState(newArray[index]), phrase.push(newArray[index]), newArray.splice(index, 1);
  };
  console.log(phrase);
  console.log(newArray);

  if (rangeWordValue == phrase.length) {
    setWord(phrase);
    return <Resume />;
  }
  return (
    <div className="mainContainer">
      <Navigation />
      <div className="title">Welcome on switch page</div>
      <div>
        <div>
          <h1>{state}</h1>
        </div>
        <div className="button-container">
          <button type="button" onClick={deleteWord}>
            Dislike
          </button>
          <button type="button" onClick={addWord}>
            Like
          </button>
        </div>
      </div>
    </div>
  );
}

export default SwitchPage;
